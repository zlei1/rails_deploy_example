version: '3'

services:
  base: &base
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        BUNDLE_WITHOUT: ''
        # EXECJS_RUNTIME: 'Node'
        RAILS_ENV: 'staging'
        RAILS_SERVE_STATIC_FILES: 'false'
    tty: true
    stdin_open: true
    image: rails_deploy_example
    env_file: .env

  rails:
    <<: *base
    build:
      context: .
      dockerfile: ./docker/dockerfiles/rails.Dockerfile
    image: rails_deploy_example-rails:staging
    volumes:
      - /var/www/rails_deploy_example_staging/shared/log:/app/log
    depends_on:
      - postgres
      - redis
      - sidekiq
    ports:
      - 3000:3000
    environment:
      # - NODE_ENV=staging
      - RAILS_ENV=staging
    entrypoint: docker/entrypoints/rails.sh
    command: ["bundle", "exec", "rails", "s", "-p", "3000", "-b", "0.0.0.0"]

  sidekiq:
    <<: *base
    image: rails_deploy_example-sidekiq:staging
    volumes:
      - /var/www/rails_deploy_example_staging/shared/log:/app/log
    depends_on:
      - postgres
      - redis
    environment:
      # - NODE_ENV=staging
      - RAILS_ENV=staging
    command: ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]

  postgres:
    image: postgres:12
    restart: always
    ports:
      - '5431:5432'
    volumes:
      - /var/www/rails_deploy_example_staging/shared/data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=rails_deploy_example_staging
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - /var/www/rails_deploy_example_staging/shared/data/redis:/data
    ports:
      - '6378:6379'
