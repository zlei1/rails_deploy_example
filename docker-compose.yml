version: '3'

services:
  base: &base
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        BUNDLE_WITHOUT: ''
        # EXECJS_RUNTIME: 'Node'
        RAILS_ENV: 'development'
        RAILS_SERVE_STATIC_FILES: 'false'
    tty: true
    stdin_open: true
    image: rails_deploy_example
    env_file: .env

  rails:
    <<: *base
    build:
      context: .
      dockerfile: ./docker/dockerfiles/rails.Dockerfile
    image: rails_deploy_example-rails:development
    volumes:
      - log:/app/log
    depends_on:
      - postgres
      - redis
      - sidekiq
    ports:
      - 3000:3000
    environment:
      # - NODE_ENV=development
      - RAILS_ENV=development
    entrypoint: docker/entrypoints/rails.sh
    command: ["bundle", "exec", "rails", "s", "-p", "3000", "-b", "0.0.0.0"]

  sidekiq:
    <<: *base
    image: rails_deploy_example-sidekiq:development
    volumes:
      - log:/app/log
    depends_on:
      - postgres
      - redis
    environment:
      # - NODE_ENV=development
      - RAILS_ENV=development
    command: ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]

  # webpack:
  #   <<: *base
  #   build:
  #     context: .
  #     dockerfile: ./docker/dockerfiles/webpack.Dockerfile
  #   image: rails_deploy_example-webpack
  #   volumes:
  #     - log:/app/log
  #   ports:
  #     - "3035" # Webpack dev server
  #   environment:
  #     - NODE_ENV=development
  #     - RAILS_ENV=development
  #   entrypoint: docker/entrypoints/webpack.sh
  #   command: bin/webpack-dev-server

  postgres:
    image: postgres:12
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - postgres:/data/postgres
    environment:
      - POSTGRES_DB=rails_deploy_example_development
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - redis:/data/redis
    ports:
      - '6379:6379'

volumes:
  postgres:
  redis:
  log:
